apiVersion: apps/v1
kind: Deployment
metadata:
  name: desafio-sre-app
  labels:
    app: desafio-sre-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: desafio-sre-app
  template:
    metadata:
      labels:
        app: desafio-sre-app
    spec:
      containers:
      - name: app
        
        image: 027922993398.dkr.ecr.us-east-1.amazonaws.com/desafio-sre-app:v1
        ports:
        - containerPort: 8080 
        env:
        
        # --- CORRIGINDO OS NOMES DO POSTGRES ---
        - name: POSTGRES_HOST  # MUDADO DE DB_HOST PARA POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: db_host
        - name: POSTGRES_USER  # MUDADO DE DB_USER PARA POSTGRES_USER (do Secret)
          valueFrom:
            secretKeyRef:
              name: bd-credentials
              key: DB_USER       # A CHAVE AINDA É DB_USER NO SECRET
        - name: POSTGRES_PASSWORD # MUDADO DE DB_PASSWORD PARA POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: bd-credentials
              key: DB_PASSWORD     # A CHAVE AINDA É DB_PASSWORD NO SECRET
              
        # --- CORRIGINDO O NOME DO REDIS ---
        - name: REDIS_HOST # MUDADO DE REDIS_ENDPOINT PARA REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: redis_endpoint

        # KAFKA (Nome da variável é KAFKA_BROKERS, se a app ler assim)
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: kafka_brokers